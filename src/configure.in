dnl Process this file with autoconf to produce a configure script.
AC_INIT(console.c)
AM_CONFIG_HEADER(config.h)

dnl Checks for programs.
AC_PROG_CC

AC_CACHE_CHECK([for EMX], ac_cv_have_emx,
	AC_TRY_COMPILE(, [#ifndef __EMX__
	kill me!
	#endif ], ac_cv_have_emx=yes, ac_cv_have_emx=no)
)
if test "$ac_cv_have_emx" = yes; then
	LDFLAGS="`echo "$LDFLAGS -Zsysv-signals -Zbin-files" | sed "s/-Zexe//g" | sed "s/-Zmt//g"`"
	CFLAGS="`echo "$CFLAGS" | sed "s/-Zmt//g"`"
fi

dnl Checks for libraries.
dnl Replace `main' with a function in -lm:
AC_CHECK_LIB(m, main)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h sys/ioctl.h sys/time.h unistd.h linux/vt.h linux/kd.h siginfo.h float.h sys/select.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_HEADER_TIME
AC_STRUCT_TM

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(gettimeofday select strtol strtoul getopt)

AC_CHECK_FUNCS(psignal)

AC_CHECK_FUNC(random, cf_result=yes, cf_result=no)
if test "$cf_result" = no; then
	AC_CHECK_LIB(bsd, random)
fi

AC_CHECK_FUNC(srandom, cf_result=yes, cf_result=no)
if test "$cf_result" = no; then
	AC_CHECK_LIB(bsd, srandom)
fi

AC_CHECK_FUNC(socket, cf_result=yes, cf_result=no)
if test "$cf_result" = no; then
	AC_CHECK_LIB(socket, socket)
fi

AC_CACHE_CHECK([for typeof], ac_cv_have_typeof,
	AC_TRY_COMPILE(, [int a;
	typeof(a) b;], ac_cv_have_typeof=yes, ac_cv_have_typeof=no)
	)
test "$ac_cv_have_typeof" = yes && AC_DEFINE(HAVE_TYPEOF)

#AC_MSG_CHECKING([for gethostbyname])
#AC_TRY_LINK([#include <netdb.h>], [gethostbyname("")], cf_result=yes, cf_result=no)
#AC_MSG_RESULT($cf_result)
AC_CHECK_FUNC(gethostbyname, cf_result=yes, cf_result=no)
if test "$cf_result" = no; then
	AC_CHECK_LIB(socket, gethostbyname, cf_result=yes, cf_result=no)
	if test "$cf_result" = no; then
		AC_CHECK_LIB(nsl, gethostbyname)
	else
		test -z "`echo $LIBS | grep -- -lsocket`" && LIBS="$LIBS -lsocket"
	fi
fi

if test "$with_x" = yes ; then
	if test "$ac_cv_have_emx" = yes && test -n "$X11ROOT"; then
		CFLAGS="$CFLAGS -I$X11ROOT/XFree86/include"
		LDFLAGS="$LDFLAGS -L$X11ROOT/XFree86/lib"
	fi
	AC_PATH_XTRA
	dnl Replace `main' with a function in -lX11:
	AC_CHECK_LIB(X11, main,AC_DEFINE(HAVE_LIBXPM) X_LIBS="$X_LIBS -lX11",,-L$x_libraries)
	dnl Replace `main' with a function in -lXpm:
	AC_CHECK_LIB(Xpm, main,AC_DEFINE(HAVE_LIBX11) X_LIBS="$X_LIBS -lXpm",,-L$x_libraries -lX11)
	X0VERKILL=x0verkill
	XEDITOR=xeditor
	XAVI=xavi
	AC_SUBST(X0VERKILL)
	AC_SUBST(XEDITOR)
	AC_SUBST(XAVI)
fi

if test "$ac_cv_have_emx" = yes; then
	LDFLAGS="$LDFLAGS -Zexe"
	OVERKILL_SPECIAL="emxbind -e -f -q 0verkill.exe"
fi
AC_SUBST(OVERKILL_SPECIAL)

AC_OUTPUT(Makefile)
